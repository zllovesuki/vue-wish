import { TypedEventTarget } from "./events";
export declare const DEFAULT_ICE_SERVERS: string[];
export declare class WISH extends TypedEventTarget {
  private peerConnection?;
  private iceServers;
  private videoSender?;
  private remoteTracks;
  private playerMedia?;
  private connectedPromise;
  private connectedResolver;
  private gatherPromise;
  private gatherResolver;
  private endpoint?;
  private resourceURL?;
  private mode;
  private parsedOffer?;
  private useTrickle;
  private etag?;
  private providedIceServer?;
  constructor(iceServers?: string[]);
  private logMessage;
  private killConnection;
  private createConnection;
  private newResolvers;
  private addEventListeners;
  private onGatheringStateChange;
  private onConnectionStateChange;
  private onICECandidate;
  private onSignalingStateChange;
  private onICEConnectionStateChange;
  private onTrack;
  private waitForICEGather;
  private doSignaling;
  private whipOffer;
  private whepClientOffer;
  private doSignalingPOST;
  private doSignalingPATCH;
  private checkEndpoint;
  WithEndpoint(endpoint: string, trickle: boolean): Promise<void>;
  Disconnect(): Promise<void>;
  Play(): Promise<MediaStream>;
  Publish(src: MediaStream): Promise<void>;
  ReplaceVideoTrack(src: MediaStream): Promise<void>;
}
